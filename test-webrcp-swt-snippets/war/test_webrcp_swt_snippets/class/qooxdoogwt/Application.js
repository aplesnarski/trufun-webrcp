/* ************************************************************************

   Copyright:

   License:

   Authors: Auto generated by GWT-Linker

************************************************************************ */

/* ************************************************************************

#asset(qooxdoogwt/*)
#require(qx.bom.Font)
#require(qx.core.Object)
#require(qx.core.Setting)
#require(qx.data.MBinding)
#require(qx.event.type.Data)
#require(qx.event.type.Dom)
#require(qx.event.type.Drag)
#require(qx.event.type.Event)
#require(qx.event.type.Focus)
#require(qx.event.type.KeySequence)
#require(qx.event.type.Mouse)
#require(qx.event.type.Native)
#require(qx.html.Element)
#require(qx.locale.Manager)
#require(qx.theme.manager.Font)
#require(qx.ui.basic.Atom)
#require(qx.ui.basic.Image)
#require(qx.ui.basic.Label)
#require(qx.ui.container.Composite)
#require(qx.ui.control.ColorPopup)
#require(qx.ui.control.ColorSelector)
#require(qx.ui.core.Blocker)
#require(qx.ui.core.Command)
#require(qx.ui.core.LayoutItem)
#require(qx.ui.core.MBlocker)
#require(qx.ui.core.MChildrenHandling)
#require(qx.ui.core.MContentPadding)
#require(qx.ui.core.MExecutable)
#require(qx.ui.core.MLayoutHandling)
#require(qx.ui.core.MMultiSelectionHandling)
#require(qx.ui.core.MNativeOverflow)
#require(qx.ui.core.MPlacement)
#require(qx.ui.core.MRemoteChildrenHandling)
#require(qx.ui.core.MRemoteLayoutHandling)
#require(qx.ui.core.MResizable)
#require(qx.ui.core.MSingleSelectionHandling)
#require(qx.ui.core.Spacer)
#require(qx.ui.core.Widget)
#require(qx.ui.core.scroll.AbstractScrollArea)
#require(qx.ui.core.scroll.NativeScrollBar)
#require(qx.ui.core.scroll.ScrollBar)
#require(qx.ui.core.scroll.ScrollSlider)
#require(qx.ui.core.selection.Abstract)
#require(qx.ui.embed.Html)
#require(qx.ui.form.AbstractField)
#require(qx.ui.form.AbstractSelectBox)
#require(qx.ui.form.Button)
#require(qx.ui.form.CheckBox)
#require(qx.ui.form.ComboBox)
#require(qx.ui.form.List)
#require(qx.ui.form.ListItem)
#require(qx.ui.form.MForm)
#require(qx.ui.form.MModelProperty)
#require(qx.ui.form.MModelSelection)
#require(qx.ui.form.MenuButton)
#require(qx.ui.form.RadioButton)
#require(qx.ui.form.RadioGroup)
#require(qx.ui.form.Slider)
#require(qx.ui.form.Spinner)
#require(qx.ui.form.TextArea)
#require(qx.ui.form.TextField)
#require(qx.ui.form.ToggleButton)
#require(qx.ui.groupbox.GroupBox)
#require(qx.ui.indicator.ProgressBar)
#require(qx.ui.layout.Abstract)
#require(qx.ui.layout.Canvas)
#require(qx.ui.layout.Dock)
#require(qx.ui.layout.Grid)
#require(qx.ui.layout.Grow)
#require(qx.ui.layout.HBox)
#require(qx.ui.layout.VBox)
#require(qx.ui.menu.AbstractButton)
#require(qx.ui.menu.Button)
#require(qx.ui.menu.CheckBox)
#require(qx.ui.menu.Manager)
#require(qx.ui.menu.Menu)
#require(qx.ui.menu.RadioButton)
#require(qx.ui.menu.Separator)
#require(qx.ui.menubar.Button)
#require(qx.ui.menubar.MenuBar)
#require(qx.ui.popup.Popup)
#require(qx.ui.root.Abstract)
#require(qx.ui.root.Application)
#require(qx.ui.table.Table)
#require(qx.ui.table.columnmodel.Basic)
#require(qx.ui.table.columnmodel.Resize)
#require(qx.ui.table.columnmodel.resizebehavior.Abstract)
#require(qx.ui.table.columnmodel.resizebehavior.Default)
#require(qx.ui.table.headerrenderer.HeaderCell)
#require(qx.ui.table.model.Abstract)
#require(qx.ui.table.model.Simple)
#require(qx.ui.table.pane.Clipper)
#require(qx.ui.table.pane.Header)
#require(qx.ui.table.pane.Model)
#require(qx.ui.table.pane.Pane)
#require(qx.ui.table.pane.Scroller)
#require(qx.ui.table.selection.Manager)
#require(qx.ui.table.selection.Model)
#require(qx.ui.tabview.Page)
#require(qx.ui.tabview.TabView)
#require(qx.ui.toolbar.Button)
#require(qx.ui.toolbar.CheckBox)
#require(qx.ui.toolbar.MenuButton)
#require(qx.ui.toolbar.Part)
#require(qx.ui.toolbar.RadioButton)
#require(qx.ui.toolbar.Separator)
#require(qx.ui.toolbar.ToolBar)
#require(qx.ui.tooltip.ToolTip)
#require(qx.ui.tree.AbstractTreeItem)
#require(qx.ui.tree.Tree)
#require(qx.ui.tree.TreeFolder)
#require(qx.ui.treevirtual.MFamily)
#require(qx.ui.treevirtual.MNode)
#require(qx.ui.treevirtual.SimpleTreeDataModel)
#require(qx.ui.treevirtual.TreeVirtual)
#require(qx.ui.window.Desktop)
#require(qx.ui.window.MDesktop)
#require(qx.ui.window.Manager)
#require(qx.ui.window.Window)
#require(qx.util.format.NumberFormat)

************************************************************************ */

var qxapp;

/**
 * This is the main application class of your custom application "qooxdoogwt"
 */
qx.Class.define("qooxdoogwt.Application",
{
  extend : qx.application.Standalone,



  /*
  *****************************************************************************
     MEMBERS
  *****************************************************************************
  */

  members :
  {
    /**
     * This method contains the initial application code and gets called
     * during startup of the application
     */
    main : function()
    {
      // Call super class
      this.base(arguments);

      // Enable logging in debug variant
      if (qx.core.Variant.isSet("qx.debug", "on"))
      {
        // support native logging capabilities, e.g. Firebug for Firefox
        qx.log.appender.Native;
        // support additional cross-browser console. Press F7 to toggle visibility
        qx.log.appender.Console;
      }

      /*
      -------------------------------------------------------------------------
        Below is your actual application code...
      -------------------------------------------------------------------------
      */
      // Document is the application root
      window.qxapp = this;
    }
  }
});
